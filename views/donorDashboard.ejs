<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Donor Dashboard - FeedForward</title>
    <meta name="description" content="">
    <meta name="keywords" content="">

    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com" rel="preconnect">
    <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/aos/aos.css" rel="stylesheet">
    <link href="/assets/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

    <!-- Main CSS File -->
    <link href="/assets/css/main.css" rel="stylesheet">
    <style>
        body {
            background-color: #0a0a0a;
            color: #ffffff;
            font-family: 'Roboto', sans-serif;
        }

        #dashboard {
            padding: 60px 0;
            background-color: #0a0a0a;
            background-image: url("/assets/img/world-dotted-map.png");
            background-size: cover;
            background-position: center;
            min-height: 100vh;
        }

        .form-container {
            background-color: #1a1a1a;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.5);
            margin-bottom: 30px;
        }

        .form-container h3 {
            font-size: 1.8rem;
            color: #fff;
            margin-bottom: 20px;
        }

        .form-group label {
            font-weight: 500;
        }

        .form-control {
            background-color: #333333;
            border: none;
            color: #ffffff;
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 5px;
        }

        .form-control:focus {
            background-color: #444444;
            border: 1px solid #007bff;
            color: #ffffff;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            padding: 10px;
            font-weight: 500;
            width: 100%;
            margin-bottom: 10px;
            transition: background-color 0.3s ease;
            border-radius: 5px;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .card {
            background-color: #1a1a1a;
            border: none;
            border-radius: 10px;
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
            transition: transform 0.2s ease-in-out;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card img {
            border-radius: 10px 10px 0 0;
            height: 200px;
            object-fit: cover;
        }

        .card-body {
            padding: 20px;
            color: #ffffff;
        }

        .card-title {
            font-size: 1.5rem;
            color: #ffffff;
            margin-bottom: 10px;
        }

        .card-text {
            color: #bbbbbb;
            margin-bottom: 15px;
        }

        .btn-primary,
        .btn-danger {
            border-radius: 5px;
            font-weight: 500;
            width: 48%;
        }

        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
            margin-left: 4%;
        }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

        .container-title {
            text-align: center;
            margin-bottom: 40px;
        }

        .container-title h2 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #fff;
        }

        @media (max-width: 768px) {
            .btn-primary,
            .btn-danger {
                width: 100%;
                margin-left: 0;
                margin-bottom: 10px;
            }
        }
    </style>
</head>

<body class="donor-dashboard-page">

    <header id="header" class="header d-flex align-items-center fixed-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center">

            <a href="/" class="logo d-flex align-items-center me-auto">
                <h1 class="sitename">FeedForward</h1>
            </a>

            <nav id="navmenu" class="navmenu">
                <ul>
                    <li><a href="/" class="active">Home</a></li>
                    <li><a href="/consumer/dashboard" class="active">Consumer Search</a></li>
                    <li><a href="/about">About</a></li>
                    <li><a href="/services">Services</a></li>
                    <li><a href="/contact">Contact</a></li>
                </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>
        </div>
    </header>

    <main id="main">
        <section id="dashboard" class="dashboard section">
            <div class="container">
                <br>
                <br>
                <div class="container-title" data-aos="fade-up">
                    <h2>Your Food Posts</h2>
                </div>

                <!-- Form to create new post -->
                <div class="row" data-aos="fade-up" data-aos-delay="100">
                    <div class="col-lg-12">
                        <div class="form-container">
                            <h3>Create a New Post</h3>
                            <form id="createPostForm" enctype="multipart/form-data">
                                <div class="form-group">
                                    <label for="description" style="color: white;">Description</label>
                                    <input  style="color: white;" type="text" id="description" class="form-control" placeholder="Enter description" required>
                                </div>
                                <div class="form-group">
                                    <label for="image" style="color: white;">Upload Image</label>
                                    <input style="color: white;" type="file" id="image" class="form-control" required>
                                </div>
                                <div class="form-group">
                                    <label for="latitude" style="color: white;">Latitude</label>
                                    <input style="color: white;" type="text" id="latitude" class="form-control" placeholder="Latitude (or use the button below)">
                                </div>
                                <div class="form-group">
                                    <label for="longitude" style="color: white;">Longitude</label>
                                    <input style="color: white;" type="text" id="longitude" class="form-control" placeholder="Longitude (or use the button below)">
                                </div>
                                <button type="button" class="btn btn-primary" onclick="getLocation()">Detect Current Location</button>
                                <button type="submit" class="btn btn-primary">Create Post</button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Existing posts -->
                <div class="row mt-4" id="postList">
                    <!-- Cards will be dynamically added here -->
                </div>
                <div id="error-message" class="error-message" style="color: white;"></div>
            </div>
        </section>
    </main>

    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Preloader -->
    <div id="preloader"></div>

    <!-- Vendor JS Files -->
    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
    <script src="/assets/vendor/aos/aos.js"></script>
    <script src="/assets/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/vendor/swiper/swiper-bundle.min.js"></script>

    <!-- Main JS File -->
    <script src="/assets/js/main.js"></script>

    <!-- Custom JS for Dashboard -->
    <script>
        document.getElementById('createPostForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const description = document.getElementById('description').value;
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;
            const image = document.getElementById('image').files[0];

            if (!description || !latitude || !longitude || !image) {
                alert("All fields are required.");
                return;
            }

            const formData = new FormData();
            formData.append('description', description);
            formData.append('latitude', latitude);
            formData.append('longitude', longitude);
            formData.append('image', image);

            try {
                const response = await fetch('/donor/createPost', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                    },
                    body: formData
                });

                if (response.ok) {
                    alert('Post created successfully!');
                    loadPosts();
                } else {
                    alert('Failed to create post.');
                }
            } catch (error) {
                alert('An error occurred. Please try again.');
            }
        });

        async function loadPosts() {
            try {
                const response = await fetch('/donor/getPosts', {
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                    }
                });

                const posts = await response.json();
                const postList = document.getElementById('postList');
                postList.innerHTML = '';

                posts.forEach(post => {
                    const card = document.createElement('div');
                    card.className = 'col-lg-4 col-md-6';
                    card.innerHTML = `
                        <div class="card" data-aos="fade-up">
                            <img src="${post.imageUrl}" class="card-img-top" alt="${post.description}">
                            <div class="card-body">
                                <h5 class="card-title">${post.description}</h5>
                                <p class="card-text">Posted on: ${new Date(post.createdAt).toLocaleDateString()}</p>
                                <button class="btn btn-primary" onclick="editPost('${post._id}')">Edit</button>
                                <button class="btn btn-danger" onclick="deletePost('${post._id}')">Delete</button>
                            </div>
                        </div>
                    `;
                    postList.appendChild(card);
                });
            } catch (error) {
                document.getElementById('error-message').textContent = 'Failed to load posts.';
            }
        }

        async function deletePost(postId) {
            try {
                const response = await fetch(`/donor/deletePost/${postId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                    }
                });

                if (response.ok) {
                    alert('Post deleted successfully!');
                    loadPosts();
                } else {
                    alert('Failed to delete post.');
                }
            } catch (error) {
                alert('An error occurred. Please try again.');
            }
        }

        async function editPost(postId) {
            const newDescription = prompt('Enter new description:');
            if (!newDescription) return;

            const newLatitude = prompt('Enter new latitude:');
            if (!newLatitude) return;

            const newLongitude = prompt('Enter new longitude:');
            if (!newLongitude) return;

            const formData = new FormData();
            formData.append('description', newDescription);
            formData.append('latitude', newLatitude);
            formData.append('longitude', newLongitude);

            try {
                const response = await fetch(`/donor/editPost/${postId}`, {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                    },
                    body: formData
                });

                if (response.ok) {
                    alert('Post edited successfully!');
                    loadPosts();
                } else {
                    alert('Failed to edit post.');
                }
            } catch (error) {
                alert('An error occurred. Please try again.');
            }
        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    document.getElementById('latitude').value = position.coords.latitude;
                    document.getElementById('longitude').value = position.coords.longitude;
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        window.onload = loadPosts;
    </script>
    <script>
        let role = localStorage.getItem("role")
        if (role == "donor") {
            const logoutButton = document.createElement('a');
            logoutButton.href = '#';
            logoutButton.className = 'btn-getstarted ms-3';
            logoutButton.textContent = 'Logout';
            logoutButton.addEventListener('click', function() {
                localStorage.removeItem('authToken');
                window.location.reload();
            });
            document.querySelector('.container-fluid').appendChild(logoutButton);
        }
    </script>
</body>

</html>
